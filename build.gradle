buildscript {
	ext {
		kotlinVersion = '1.2.30'
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-noarg'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'ng'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

noArg {
    annotation("ng.bloodpleasure.util.NoArg")
    invokeInitializers = true
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
	mavenCentral()
}

sourceSets{
	main.java.srcDirs += 'src/main/kotlin/'
	test.java.srcDirs += 'src/test/kotlin/'
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-webflux')
	compile('com.fasterxml.jackson.module:jackson-module-kotlin')
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")
	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('io.projectreactor:reactor-test')
}
